name: Validation

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PRE_COMMIT_HOME: "/home/runner/.cache/pre-commit"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup poetry
        id: poetry_setup
        uses: ItsDrike/setup-poetry@v1
        with:
          python-version: 3.11
          install-args: "--without release"

      - name: Pre-commit Environment Caching
        uses: actions/cache@v3
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: "precommit-${{ runner.os }}-${{ steps.poetry_setup.outputs.python-version }}-\
                ${{ hashFiles('./.pre-commit-config.yaml') }}"
          # Restore keys allows us to perform a cache restore even if the full cache key wasn't matched.
          # That way we still end up saving new cache, but we can still make use of the cache from previous
          # version.
          restore-keys: "precommit-${{ runner.os }}-${{ steps.poetry_setup.outputs-python-version}}-"

      - name: Run pre-commit hooks
        run: SKIP=black,isort,ruff,slotscheck,pyright pre-commit run --all-files

      - name: Run black formatter check
        run: black --check --diff .

      - name: Run isort import formatter check
        run: isort --check --diff .

      - name: Run ruff linter
        run: ruff --no-fix --show-source .

      - name: Run slotscheck
        run: slotscheck -m mcproto

      - name: Run pyright type checker
        run: pyright .
